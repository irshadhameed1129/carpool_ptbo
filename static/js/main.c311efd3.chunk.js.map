{"version":3,"sources":["components/NavBar.js","pages/home.js","pages/career.js","pages/login.js","pages/register.js","pages/userHome.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","loggedInStatus","user","Navbar","bg","variant","sticky","Brand","href","Nav","className","Link","Component","home","inputSet","e","console","log","target","name","setState","value","getAllpost","preventDefault","dat","endPlace","startPlace","axios","post","then","response","posts","data","length","alert","style","display","justifyContent","Card","width","Body","Subtitle","fontSize","Text","Form","Label","Control","type","placeholder","required","onChange","this","Button","onClick","height","Table","striped","bordered","hover","sort","a","b","date","map","item","key","fname","time","mobile","rate","Career","savePost","start","end","user_id","id","status","props","history","push","sessionStorage","getItem","JSON","parse","border","Header","color","Group","controlId","Row","React","login","pass","validateUser","email","setItem","stringify","errorMessage","redirect","register","saveUser","lname","cpass","userHome","logout","removeItem","update","uid","loading","get","catch","error","class","CardGroup","disabled","size","App","path","exact","component","Home","Login","Register","UserHome","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c311efd3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Nav, Navbar,} from \"react-bootstrap\";\r\n\r\nexport default class NavBar extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state ={\r\n        loggedInStatus : \"NOT_LOGGED_IN\",\r\n        user: {}\r\n      }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n          <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Navbar.Brand href=\"/\">CarPool PTBO</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {/* <Nav.Link href=\"/career\">Career</Nav.Link> */}\r\n              <Nav.Link href=\"/login\">Profile</Nav.Link>\r\n              {/* <Nav.Link href=\"/userHome\"></Nav.Link> */}\r\n            </Nav>\r\n          </Navbar>\r\n          </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport {Form, Button, Card,Table} from \"react-bootstrap\";\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport axios from 'axios';\n\n class home extends Component {\n\n  constructor() {\n\n    super();\n    this.state ={\n      posts :[],\n      startPlace:'',\n      endPlace:'',\n\n    }\n  }\n\n  inputSet = (e) => {\n    console.log(e.target.name);\n    this.setState({[e.target.name] : e.target.value})\n}\n\ngetAllpost = (e) => {\n  e.preventDefault();\n  var dat = {\n    endPlace :this.state.endPlace,\n    startPlace :this.state.startPlace,\n   \n      \n  }\n\n\n           axios.post('https://carpoolptbo.herokuapp.com/searchPost/',dat).then(response =>{\n                     this.setState({posts : response.data})\n                    console.log(response)\n                    if(response.data.length === 0) {\n                      alert('No Result Found')\n                    }\n                   \n                })\n\n\n  \n\n}\n\n\n\n  render() {\n    return (\n      <>\n      <div  style={{  display: `flex`, justifyContent: `center`  }}> \n      <Card  style={{ width: '30rem'  }}>\n      <Card.Body>\n      <Card.Subtitle className=\"mb-2 text-muted text-center\" style={{ fontSize:'30px'  }} >CarPool PTBO</Card.Subtitle>\n        <Card.Subtitle className=\"mb-2 text-muted text-center\"  >Find Your Ride</Card.Subtitle>\n        <Card.Text>\n        <Form>\n      \n        <Form.Label>Starting Point</Form.Label>\n        <Form.Control type=\"text\" name=\"startPlace\" placeholder=\"Starting Point\"  required onChange={this.inputSet}/>\n  \n    \n     \n        <Form.Label>Destination</Form.Label>\n        <Form.Control type=\"text\" name=\"endPlace\" placeholder=\"Destination\"  required onChange={this.inputSet}/>\n  \n   \n      <Button variant=\"primary\" type=\"submit\" onClick={this.getAllpost}>\n        Search\n      </Button>\n    </Form>\n    </Card.Text>\n      </Card.Body>\n    </Card>\n</div> \n<div style={{  display: `flex`, justifyContent: `center`  }}>\n    <Scrollbars style={{  height: '20rem' , width:'65rem'}}>\n                        <Table striped bordered hover variant=\"light\" style={{ }}>\n                     \n                      \n                        <tbody> \n                        {this.state.posts.sort((a, b) => a.date < b.date ? 1 : -1)\n                        \n                        .map((item,key) =>{\n                            return ( \n                            \n                          <tr>\n                          \n                            <td>Driver: {item.fname}</td>\n                            <td>Date: {item.date}</td>\n                            <td>From: {item.startPlace}</td>\n                            <td>To : {item.endPlace}</td>\n                            <td>Time: {item.time}</td>\n                            <td>Contact: {item.mobile}</td>\n                            <td>Rate: ${item.rate}</td>\n                            <td>\n                          \n                            </td>\n                          </tr>\n                          )\n                            })}\n                        </tbody>\n                        \n                      </Table>\n                      </Scrollbars>\n\n  \n   \n   \n\n\n    </div>\n    </>\n    )\n  }\n}\n\n\n \n\nexport default home;","import React from 'react';\nimport { Form, Card , Button} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\n\nclass  Career extends React.Component {\n  // const [validated, setValidated] = useState(false);\n  constructor() {\n  super();\n  this.state = {\n    id:\"\",\n    user:[],\n    endPlace:'',\n    startPlace:'',\n    date:'',\n    time:'',\n    rate:'',\n    \n  }\n  if(sessionStorage.getItem('status')) {\n    this.state.user = JSON.parse(sessionStorage.getItem('user'));\n  }\n  \n  \n  }\n  \n  componentDidMount() {\n           \n            \n\n    if(!sessionStorage.getItem('status')===true) {\n        this.props.history.push(\"/login\");\n    }\n    else {}\n      \n        \n}\n\n  inputSet = (e) => {\n    console.log(e.target.name);\n    this.setState({[e.target.name] : e.target.value})\n} \n\n \n\n   savePost = (e) => {\n    e.preventDefault();\n    var dat = {\n        startPlace :this.state.start,\n        endPlace :this.state.end,\n        date :this.state.date,\n        time :this.state.time,\n        user_id : this.state.user.id,\n        rate: this.state.rate\n    }\n    console.log(dat);\n\n    if (dat.startPlace ==='' || dat.endPlace==='' || dat.rate==='' ||\n        dat.time === '' || dat.date==='' || dat.user_id==='') {\n          alert('Fill all Fields. Please...!')\n    }\n\nelse {\n  axios.post(\"https://carpoolptbo.herokuapp.com/newPost/\",dat)\n    .then(response=> {\n      // this.setState({messege : response.status});\n      console.log(response.status)\n      if(response.status === 200) {\n        this.props.history.push(\"/userHome\");\n        \n      }\n       else\n          alert('Sorry Something went wrong. Try again Later')\n    })\n}\n   \n        \n    \n} \n \n\n11\n// disable past dates\n\n  \n  // const inputSet = (e) => {\n  //   console.log(e.target.name);\n  //   this.setState({[e.target.name] : e.target.value})\n// } \n\n  render() {\n    return(\n    <>\n    \n    <div style={{  display: `flex`, justifyContent: `center` }}>\n      <Card  border=\"primary\" style={{ width: '30rem' }}>\n      <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >CarPool PTBO\n      </Card.Header>\n      <Card.Body >\n      {/* <Card.Img variant=\"top\" src={logo} /> */}\n        {/* <Card.Title>Login into your Account</Card.Title> */}\n        <Card.Subtitle  className=\"mb-2 text-muted text-center\">Create New Post</Card.Subtitle>\n        <Card.Text>\n          \n       <Form>\n       <Form.Text style={{ color: 'red',}}className=\"\">\n         All Fields Mandatory *\n        </Form.Text>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label >Starting Point</Form.Label>\n        <Form.Control type=\"text\" name=\"start\" value= {this.start} required placeholder=\"Enter Starting Point\"  onChange={this.inputSet}/>\n        \n      </Form.Group>\n    \n      <Form.Group controlId=\"formBasicFname\">\n        <Form.Label>Destination</Form.Label>\n        <Form.Control type=\"text\" name=\"end\" value= {this.end} required placeholder=\"Enter Destination \" onChange={this.inputSet} />\n      </Form.Group>\n      \n     \n      <Form.Row>\n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Date</Form.Label>\n        <Form.Control type=\"date\" name=\"date\" value= {this.date} required placeholder=\"Enter cchedule Date\"  onChange={this.inputSet}/>\n      \n      </Form.Group>\n      \n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Time </Form.Label>\n        <Form.Control type=\"time\" name=\"time\" value= {this.time} required placeholder=\"Enter Scheduled Time\"  onChange={this.inputSet}/>\n      </Form.Group>\n      </Form.Row>\n  \n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Rate In CAD</Form.Label>\n        <Form.Control type=\"number\" name=\"rate\" value= {this.rate} required placeholder=\"$ Rate\" onChange={this.inputSet} />\n      </Form.Group>\n  \n      {/* <Form.Group controlId=\"formBasicConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"name=\"cpass\" placeholder=\"Confirm Password\"onChange={this.inputSet}  />\n      </Form.Group> */}\n  \n  \n    \n      <Button variant=\"primary\" type=\"submit\" onClick={this.savePost}>\n        Create\n      </Button>\n    </Form>\n  \n        </Card.Text>\n        <Card.Link href=\"/userHome\">Cancel</Card.Link>\n      </Card.Body>\n    </Card>\n      \n    </div>\n    </>\n  );\n    }\n}\n\nexport default Career;\n","import React, { Component } from 'react'\r\nimport {Form, Button, Card} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n class login extends Component {\r\n\r\n    constructor() {\r\n      \r\n        super();\r\n        this.state = {\r\n        \r\n          email: '',\r\n          pass: '',\r\n          errorMessage : \"\",\r\n          user: {},\r\n          redirect:'/userHome',\r\n        }\r\n    \r\n      }\r\n\r\ncomponentDidMount () {\r\n  if(!sessionStorage.getItem('status'))\r\n        console.log(sessionStorage.getItem(\"in did mount if \"));\r\n        \r\n        else {\r\n          console.log(\"in esle statement\");\r\n          // Redirect(\"/home\");\r\n         this.props.history.push(\"/userHome\");\r\n        }\r\n}\r\n      inputSet = (e) => {\r\n        console.log(this.state.pass);\r\n        this.setState({[e.target.name] : e.target.value})\r\n    } \r\n\r\n    validateUser = (e) => {\r\n      e.preventDefault();\r\n      var dat = {\r\n\r\n           pass :this.state.pass,\r\n          email :this.state.email,\r\n          \r\n      }\r\n      if ( dat.email==='' ||\r\n      dat.pass === '' ) {\r\n        alert('Fill all Fields. Please...!')\r\n      }\r\n     else { axios.post(\"https://carpoolptbo.herokuapp.com/login/\",dat)\r\n      .then(response=> {\r\n        if(response.data.length !== 0) {\r\n          console.log(\"in axios login\")\r\n          sessionStorage.setItem(\"status\", true );\r\n          sessionStorage.setItem('user',JSON.stringify(response.data))\r\n          this.props.history.push(\"/userHome\");\r\n          \r\n        }\r\n        else  if(response.data.length === 0) {\r\n          alert('Invalid Email or Password')\r\n        }\r\n         else {\r\n            this.setState({errorMessage : \"Invalid Email or Password. Try again Later\"});\r\n         }\r\n        \r\n          })\r\n        }\r\n\r\n  }      \r\n    render() {\r\n        return (\r\n            <div style={{  display: `flex`, justifyContent: `center`  }}> \r\n    <Card  style={{ width: '30rem'  }}>\r\n    <Card.Body>\r\n    \r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\" >Login into your Account</Card.Subtitle>\r\n      <Card.Text>\r\n      <Form>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n      <Form.Label>Email address</Form.Label>\r\n      <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" required onChange={this.inputSet} />\r\n      <Form.Text className=\"text-muted\">\r\n        We'll never share your email with anyone else.\r\n      </Form.Text>\r\n    </Form.Group>\r\n  \r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"password\" name=\"pass\" placeholder=\"Password\"  required onChange={this.inputSet}/>\r\n    </Form.Group>\r\n    { this.state.errorMessage &&\r\n  <p style={{ color: 'red' }} className=\"error\"> { this.state.errorMessage } </p> }\r\n    <Button variant=\"primary\" type=\"submit\" onClick={this.validateUser}>\r\n      Submit\r\n    </Button>\r\n  </Form>\r\n\r\n  </Card.Text>\r\n      <Card.Link href=\"/register\">Create New Account?</Card.Link>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  </div>\r\n        )\r\n    }\r\n}\r\nexport default login;","import React, { Component } from 'react'\nimport {Form, Button, Card} from \"react-bootstrap\";\nimport axios from 'axios';\nclass register extends Component {\n  constructor() {\n\n    super();\n    this.state = {\n      fname: '',\n      lname: '',\n      email: '',\n      pass: '',\n      cpass: '',\n      mobile : \"\"\n    }\n\n  }\n\n  inputSet = (e) => {\n    console.log(e.target.name);\n    this.setState({[e.target.name] : e.target.value})\n} \nsaveUser = (e) => {\n    e.preventDefault();\n    var dat = {\n        lname :this.state.lname,\n        fname :this.state.fname,\n        email :this.state.email,\n        pass :this.state.pass,\n        mobile: this.state.mobile\n    }\n\n    if (dat.lname ==='' || dat.fname==='' || dat.email==='' ||\n    dat.pass === '' || dat.mobile==='' ) {\n      alert('Fill all Fields. Please...!')\n    } else {\n      axios.post(\"https://carpoolptbo.herokuapp.com/registration/\",dat)\n      .then(response=> {\n        // this.setState({messege : response.status});\n        console.log(response.status)\n        if(response.data.length !== 0) {\n          this.props.history.push(\"/Home\");\n          \n        }\n         else if(response.data.length === 0)\n            alert('Email Address Already Exist......!')\n            else \n            alert('Server Not Responding')\n      })\n    }\n\n   \n        \n    \n} \n\n\n  render() {\n    return (\n      <div style={{  display: `flex`, justifyContent: `center` }}>\n      <Card  border=\"primary\" style={{ width: '30rem' }}>\n      <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >CarPool PTBO\n      </Card.Header>\n      <Card.Body >\n      {/* <Card.Img variant=\"top\" src={logo} /> */}\n        {/* <Card.Title>Login into your Account</Card.Title> */}\n        <Card.Subtitle  className=\"mb-2 text-muted text-center\">Enter Your Details</Card.Subtitle>\n        <Card.Text>\n          \n       <Form>\n       <Form.Text style={{ color: 'red',}}className=\"\">\n         All Fields Mandatory *\n        </Form.Text>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label >Email address</Form.Label>\n        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.inputSet}/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n    \n      <Form.Group controlId=\"formBasicFname\">\n        <Form.Label>First Name</Form.Label>\n        <Form.Control type=\"text\" name=\"fname\"  placeholder=\"Enter First Name\" onChange={this.inputSet} />\n      </Form.Group>\n  \n     \n  \n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Last Name</Form.Label>\n        <Form.Control type=\"text\" name=\"lname\"  placeholder=\"Enter Last Name\"  onChange={this.inputSet}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Mobile</Form.Label>\n        <Form.Control type=\"number\" name=\"mobile\"  placeholder=\"Mobile\"  onChange={this.inputSet}/>\n      </Form.Group>\n  \n  \n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" name=\"pass\"  placeholder=\"Password\" onChange={this.inputSet} />\n      </Form.Group>\n  \n      {/* <Form.Group controlId=\"formBasicConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"name=\"cpass\" placeholder=\"Confirm Password\"onChange={this.inputSet}  />\n      </Form.Group> */}\n  \n  \n    \n      <Button variant=\"primary\" type=\"submit\" onClick={this.saveUser} >\n        Sign Up\n      </Button>\n    </Form>\n  \n        </Card.Text>\n        <Card.Link href=\"/login\">Already Registered?</Card.Link>\n        <Form.Text className=\"text-muted\">\n          I Accepted Term & Condition. \n        </Form.Text>\n      </Card.Body>\n    </Card>\n    </div>\n    )\n  }\n}\nexport default register;","\r\nimport React, { Component } from 'react'\r\nimport { CardGroup,Form, Button, Card, Table} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport {Scrollbars} from 'react-custom-scrollbars';\r\n  class userHome extends Component {\r\n       \r\n        constructor () {\r\n            \r\n            super();\r\n            this.state = {\r\n                        uid:'',\r\n                        user : [],\r\n                        id:'',\r\n                        posts :[],\r\n                        fname: '',\r\n                        email:'',\r\n                        lname:'',\r\n                        pass:'',\r\n                        mobile:'',\r\n                        loading: true,\r\n            }\r\n           \r\n            if(sessionStorage.getItem('status')) {\r\n                this.state.user = JSON.parse(sessionStorage.getItem('user'));\r\n            // console.log(this.user.id);\r\n            // this.setState({fname: this.state.user.fname});\r\n            this.id = this.state.user.id;\r\n            this.fname = this.state.user.fname;\r\n            this.lname = this.state.user.lname;\r\n            this.email = this.state.user.email;\r\n            this.pass = this.state.user.pass;\r\n            this.mobile = this.state.user.mobile;\r\n            \r\n            }\r\n            else {\r\n            }\r\n           \r\n        }\r\n        inputSet = (e) => {\r\n            console.log(e.target.name);\r\n            this.setState({[e.target.name] : e.target.value})\r\n        } \r\n         componentDidMount() {\r\n           \r\n            \r\n\r\n            if(!sessionStorage.getItem('status')===true) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n            else {\r\n                \r\n                axios.get('https://carpoolptbo.herokuapp.com/getPost/'+this.id+'/').then(response =>{\r\n                     this.setState({posts : response.data})\r\n                    console.log(response.data)\r\n                   \r\n                }).catch(error => {\r\n                    console.log(error);\r\n                })\r\n            }\r\n              \r\n                \r\n        }\r\n\r\n\r\n        logout= (e)=>{\r\n            sessionStorage.removeItem('status');\r\n            sessionStorage.removeItem('user');\r\n            console.log(sessionStorage.getItem('status'));\r\n            this.props.history.push(\"/login\");\r\n          }\r\n\r\n          update = (e) => {\r\n            e.preventDefault();\r\n            var dat = {\r\n                fname : this.state.user.fname,\r\n                lname : this.state.user.lname,\r\n                email : this.state.user.email,\r\n                id : this.state.user.id,\r\n                // lname :this.state.lname,\r\n                // fname :this.state.fname,\r\n                // email :this.state.email,\r\n                pass :this.state.pass,\r\n                mobile: this.state.mobile\r\n            \r\n            }\r\n            console.log(dat);\r\n            \r\n\r\n            axios.post(\"https://carpoolptbo.herokuapp.com/update/\",dat)\r\n    .then(response=> {\r\n      // this.setState({messege : response.status});\r\n      console.log(response.data)\r\n      if(response.status === 200) {\r\n        alert('Profile Updated')\r\n        // this.props.history.push(\"/Home\");\r\n        \r\n      }\r\n       else\r\n          alert('Sorrrrrry !!!! Un-authenticated User !!!!!')\r\n    })\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div class=\"\">\r\n                <CardGroup>\r\n                \r\n                    <div class=\"\">\r\n                    <Button variant=\"error\" type=\"submit\" onClick={this.logout} >\r\n                                        Logout\r\n                            </Button>\r\n                            <Card  border=\"success\" style={{ width: '20rem'}}>\r\n                            <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >You Profile Details\r\n                            </Card.Header>\r\n                            <Card.Body >\r\n                            {/* <Card.Img variant=\"top\" src={logo} /> */}\r\n                            {/* <Card.Title>Login into your Account</Card.Title> */}\r\n                            <Card.Subtitle  className=\"mb-2 text-muted text-center\">Welcome Back: <p> {  this.state.fname }</p></Card.Subtitle>\r\n                            <Card.Text>\r\n                                \r\n                            <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control  type=\"email\" name=\"email\" value = {this.email}  placeholder={this.email}  disabled  />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                            </Form.Group>\r\n                        \r\n                            <Form.Group controlId=\"formBasicFname\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"fname\"  value = {this.name}  placeholder={this.fname}  disabled  />\r\n                            </Form.Group>\r\n                        \r\n                        \r\n                        \r\n                            <Form.Group controlId=\"formBasicLname\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"lname\" value = {this.lname} placeholder={this.lname}   disabled  />\r\n                            </Form.Group>\r\n                    \r\n                            <Form.Group controlId=\"formBasicLname\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"mobile\"  placeholder={this.mobile} onChange={this.inputSet} />\r\n                            </Form.Group>\r\n                        \r\n                        \r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"pass\" required placeholder=\"Password\" onChange={this.inputSet} />\r\n                            </Form.Group>\r\n                        \r\n                            <Button variant=\"success\" type=\"submit\" onClick={this.update} >\r\n                            Update\r\n                            </Button>\r\n                            <Form.Text className=\"text-muted\">\r\n                                \r\n                            </Form.Text>\r\n                        </Form>\r\n                        \r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n             </div>\r\n            <div class=\"col\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <h4 style={{   width : '50rem'  }}>Your Ride History</h4>\r\n                    </div >\r\n                    \r\n                    <div class=\"col\">\r\n                    <Button variant=\"warning\" type=\"submit\" href=\"/career\" >\r\n                                        Create Ride\r\n                                        </Button>\r\n\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n              \r\n                <div class=\"row\">\r\n               \r\n                    {/* {this.state.posts.map(singlePost => ( */}\r\n                        \r\n\r\n            \r\n                  \r\n                  <Scrollbars style={{  height: '50rem' }}>\r\n                        <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Ref</th>\r\n                            <th>Date</th>\r\n                            <th>Starting Point\r\n                                 \r\n                            </th>\r\n                            <th>Destination</th>\r\n                            <th>Time</th>\r\n                            <th>Rate</th>\r\n                            <th>Action</th>\r\n                            \r\n\r\n\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                        {this.state.posts.sort((a, b) => a.date < b.date ? 1 : -1)\r\n                        \r\n                        .map((item,key) =>{\r\n                            return ( \r\n                          <tr>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.date}</td>\r\n                            <td>{item.startPlace}</td>\r\n                            <td>{item.endPlace}</td>\r\n                            <td>{item.time}</td>\r\n                            <td>${item.rate}</td>\r\n                            <td>\r\n                            <Button variant=\"danger\" type=\"submit\" onClick={this.update} disabled >\r\n                                        Delete\r\n                                        </Button> \r\n                            </td>\r\n                          </tr>\r\n                          )\r\n                            })}\r\n                        </tbody>\r\n                        \r\n                      </Table>\r\n                      </Scrollbars>\r\n                    </div>\r\n             </div>  \r\n            </CardGroup>\r\n        </div>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default userHome;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/home';\nimport Career from './pages/career';\n// import Career from './pages/services';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport UserHome from './pages/userHome';\n// import axios from 'axios';\n\n class App extends Component {\n  constructor() {\n    super();\n\n    this.state ={\n      loggedInStatus : \"NOT_LOGGED_IN\",\n      user: {}\n    }\n\n  }\n\n  \n\n  render() {\n      return (\n          <>\n         <Router>\n   <NavBar />\n     <Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/home' exact component={Home} />\n       <Route path='/career' component={Career} />\n       <Route path='/login' component={Login} />\n       <Route path='/register' component={Register} />\n       <Route path='/userHome' component ={UserHome}/>\n       {/* <Link to=\"/userHome\">Login</Link> */}\n     \n    </Switch>\n    \n </Router>\n        </>\n      )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}