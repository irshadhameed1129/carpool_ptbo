{"version":3,"sources":["components/NavBar.js","pages/home.js","pages/career.js","pages/about.js","pages/login.js","pages/register.js","pages/userHome.js","pages/resetPass.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","loggedInStatus","user","Navbar","bg","variant","sticky","Brand","href","Nav","className","Link","Component","home","inputSet","e","setState","target","name","value","getAllpost","preventDefault","dat","endPlace","startPlace","alert","loading","axios","post","then","response","posts","data","length","show","style","display","justifyContent","Card","width","Body","Subtitle","fontSize","Text","Form","Label","Control","type","placeholder","required","onChange","this","Button","onClick","Spinner","animation","height","sort","a","b","date","map","item","key","Alert","fname","time","mobile","rate","Career","savePost","start","end","user_id","id","status","props","history","push","sessionStorage","getItem","JSON","parse","border","Header","color","Group","controlId","Row","React","about","Img","src","Title","login","console","log","pass","validateUser","email","setItem","stringify","errorMessage","redirect","register","saveUser","lname","cpass","userHome","logout","removeItem","delete","window","location","reload","catch","error","update","uid","get","class","CardGroup","disabled","Table","striped","bordered","hover","size","resetPass","resetPassword","formNoValidate","App","path","exact","component","Home","Login","Register","UserHome","ResetPass","About","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.338eed81.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Nav, Navbar,} from \"react-bootstrap\";\r\n\r\nexport default class NavBar extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state ={\r\n        loggedInStatus : \"NOT_LOGGED_IN\",\r\n        user: {}\r\n      }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n          <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Navbar.Brand href=\"/\">CarPool PTBO</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/\">Home</Nav.Link>\r\n              {/* <Nav.Link href=\"/career\">Career</Nav.Link> */}\r\n              <Nav.Link href=\"/login\">Driver's Profile</Nav.Link>\r\n              <Nav.Link href=\"/about\">Our Mission</Nav.Link>\r\n              {/* <Nav.Link href=\"/userHome\"></Nav.Link> */}\r\n            </Nav>\r\n          </Navbar>\r\n          </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport {Form,Spinner, Button, Card, Alert} from \"react-bootstrap\";\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport axios from 'axios';\n\n class home extends Component {\n\n  constructor() {\n\n    super();\n    this.state ={\n      posts :[],\n      startPlace:'',\n      endPlace:'',\n      show: true,\n      loading: true\n\n    }\n  }\n\n  inputSet = (e) => {\n    this.setState({[e.target.name] : e.target.value})\n}\n\ngetAllpost = (e) => {\n  e.preventDefault();\n  var dat = {\n    endPlace :this.state.endPlace,\n    startPlace :this.state.startPlace,\n   \n      \n  }\n\n  if (dat.startPlace ==='' || dat.endPlace==='' \n ) {\n    alert('Fill all Fields. Please...!')\n} else {\n  this.setState({loading: false});\n  \n  axios.post('https://carpoolptbo.herokuapp.com/searchPost/',dat).then(response =>{\n\n  \n          //  axios.post('http://localhost:8080/searchPost/',dat).then(response =>{\n                     this.setState({posts : response.data})\n                    if(response.data.length === 0) {\n                      this.setState({loading: true});\n                      alert('No Result Found')\n                    } else {\n                      this.setState({loading: true});\n                      alert( response.data.length+' Data found on your Search');\n                    }\n                }\n                )\n\n              }\n}\n\n\n\n\n\n  render() {\n    return (\n      <>\n      <div  style={{  display: `flex`, justifyContent: `center`  }}> \n      <Card  style={{ width: '30rem'  }}>\n      <Card.Body>\n      \n      <Card.Subtitle className=\"mb-2 text-muted text-center\" style={{ fontSize:'30px'  }} >CarPool PTBO</Card.Subtitle>\n        <Card.Subtitle className=\"mb-2 text-muted text-center\"  >Find Your Ride</Card.Subtitle>\n        <Card.Text>\n        <Form>\n      \n        <Form.Label>Starting Point</Form.Label>\n        <Form.Control type=\"text\" name=\"startPlace\" placeholder=\"Starting Point\"  required onChange={this.inputSet}/>\n  \n    \n     \n        <Form.Label>Destination</Form.Label>\n        <Form.Control type=\"text\" name=\"endPlace\" placeholder=\"Destination\"  required onChange={this.inputSet}/>\n  \n   \n      <Button variant=\"primary\" type=\"submit\" onClick={this.getAllpost}>\n        Search\n      </Button>\n      {this.state.loading ? <div></div> : <>  <div><br></br> <Spinner animation=\"border\"  /> Please Wait......!   </div></>}\n\n    </Form>\n    </Card.Text>\n      </Card.Body>\n    </Card>\n</div> \n<div style={{  display: `flex`, justifyContent: `center`  }}>\n    <Scrollbars style={{  height: '20rem' , width:'65rem'}}>\n\n\n                        {this.state.posts.sort((a, b) => a.date < b.date ? 1 : -1)\n                      \n                      .map((item,key) =>{\n                          return ( \n                            <Alert variant=\"success\"     >\n                            \n                        \n                        \n                          Driver: {item.fname} {\" \"}\n                          Date: {item.date}  {\" \"}\n                          From: {item.startPlace} {\" \"}\n                          To : {item.endPlace} {\" \"}\n                          Time: {item.time} {\" \"}\n                          Contact: {item.mobile} {\" \"}\n                          Rate: ${item.rate}\n                          \n                        \n                          \n                        \n                        </Alert>\n                        )\n                          })}\n\n                      </Scrollbars>\n\n  \n   \n   \n\n\n    </div>\n    </>\n    )\n  }\n}\n\n\n \n\nexport default home;","import React from 'react';\nimport { Form, Card ,Spinner, Button} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\n\nclass  Career extends React.Component {\n  // const [validated, setValidated] = useState(false);\n  constructor() {\n  super();\n  this.state = {\n    id:\"\",\n    user:[],\n    endPlace:'',\n    startPlace:'',\n    date:'',\n    time:'',\n    rate:'',\n    loading: true\n  }\n  if(sessionStorage.getItem('status')) {\n    this.state.user = JSON.parse(sessionStorage.getItem('user'));\n  }\n  \n  \n  }\n  \n  componentDidMount() {\n           \n            \n\n    if(!sessionStorage.getItem('status')===true) {\n        this.props.history.push(\"/login\");\n    }\n    else {}\n      \n        \n}\n\n  inputSet = (e) => {\n    this.setState({[e.target.name] : e.target.value})\n} \n\n \n\n   savePost = (e) => {\n    e.preventDefault();\n    var dat = {\n        startPlace :this.state.start,\n        endPlace :this.state.end,\n        date :this.state.date,\n        time :this.state.time,\n        user_id : this.state.user.id,\n        rate: this.state.rate\n    }\n\n    if (dat.startPlace ==='' || dat.endPlace==='' || dat.rate==='' ||\n        dat.time === '' || dat.date==='' || dat.user_id==='') {\n          alert('Fill all Fields. Please...!')\n    }\n\nelse {\n  this.setState({loading: false});\n  axios.post(\"https://carpoolptbo.herokuapp.com/newPost/\",dat)\n  // axios.post(\"http://localhost:8080/newPost/\",dat)\n    .then(response=> {\n      // this.setState({messege : response.status});\n      if(response.status === 200) {\n        this.setState({loading: true});\n        alert('New Post Created')\n        this.props.history.push(\"/userHome\");\n        \n      }\n       else\n       this.setState({loading: true});\n          alert('Sorry Something went wrong. Try again Later')\n    })\n}\n   \n        \n    \n} \n \n\n11\n// disable past dates\n\n  \n  // const inputSet = (e) => {\n  //   console.log(e.target.name);\n  //   this.setState({[e.target.name] : e.target.value})\n// } \n\n  render() {\n    return(\n    <>\n    \n    <div style={{  display: `flex`, justifyContent: `center` }}>\n      <Card  border=\"primary\" style={{ width: '30rem' }}>\n      <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >CarPool PTBO\n      </Card.Header>\n      <Card.Body >\n      {/* <Card.Img variant=\"top\" src={logo} /> */}\n        {/* <Card.Title>Login into your Account</Card.Title> */}\n        <Card.Subtitle  className=\"mb-2 text-muted text-center\">Create New Post</Card.Subtitle>\n        <Card.Text>\n          \n       <Form>\n       <Form.Text style={{ color: 'red',}}className=\"\">\n         All Fields Mandatory *\n        </Form.Text>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label >Starting Point</Form.Label>\n        <Form.Control type=\"text\" name=\"start\" value= {this.start} required placeholder=\"Enter Starting Point\"  onChange={this.inputSet}/>\n        \n      </Form.Group>\n    \n      <Form.Group controlId=\"formBasicFname\">\n        <Form.Label>Destination</Form.Label>\n        <Form.Control type=\"text\" name=\"end\" value= {this.end} required placeholder=\"Enter Destination \" onChange={this.inputSet} />\n      </Form.Group>\n      \n     \n      <Form.Row>\n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Date</Form.Label>\n        <Form.Control type=\"date\" name=\"date\" value= {this.date} required placeholder=\"Enter cchedule Date\"  onChange={this.inputSet}/>\n      \n      </Form.Group>\n      \n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Time </Form.Label>\n        <Form.Control type=\"time\" name=\"time\" value= {this.time} required placeholder=\"Enter Scheduled Time\"  onChange={this.inputSet}/>\n      </Form.Group>\n      </Form.Row>\n  \n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Rate In CAD</Form.Label>\n        <Form.Control type=\"number\" name=\"rate\" value= {this.rate} required placeholder=\"$ Rate\" onChange={this.inputSet} />\n      </Form.Group>\n  \n\n  \n    \n      <Button variant=\"primary\" type=\"submit\" onClick={this.savePost}>\n        Create\n      </Button>\n\n      {this.state.loading ? <div></div> : <>  <div><br></br> <Spinner animation=\"border\"  /> Please Wait......!   </div></>}\n\n    </Form>\n  \n        </Card.Text>\n        <Card.Link href=\"/userHome\">Cancel</Card.Link>\n      </Card.Body>\n    </Card>\n      \n    </div>\n    </>\n  );\n    }\n}\n\nexport default Career;\n","import React, { Component } from 'react';\nimport {Form,Spinner, Button, Card, Alert} from \"react-bootstrap\";\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport axios from 'axios';\n\n class about extends Component {\n\n  constructor() {\n\n    super();\n \n  }\n\n \n\n\n\n\n  render() {\n    return (\n      <>\n      <div  style={{  display: `flex`, justifyContent: `center`  }}> \n      <Card  style={{ width: '50rem'  }}>\n      <Card.Body>\n      <Card.Img style={{ width: '15rem' , height :'15rem' , display: `flex`, justifyContent: `center` }} variant=\"top\" src=\"https://media-exp1.licdn.com/dms/image/C5603AQEDdo9GnDgVDg/profile-displayphoto-shrink_200_200/0/1564525897701?e=1614816000&v=beta&t=oDXYoq_YmdNNNDjWI-wf8qCBMUIsIjYnXQ5Ugj5w2O8\" />\n      <Card.Title>Irshad Shahul Hameed <p>(Founder)</p></Card.Title> \n    <Card.Text >\n   <h3>Our Mission </h3>\n   CarPool PTBO will facilitate a safe and reliable commuting environment in \n   the Ontario area by providing free, non-judgmental rides.\n   \n\n   CarPool PTBO  is a carpooling Web application for long distance travel, with the \n   mission to improve the interaction between riders and drivers.\nTargeting long distance commuters, our goal has always been to provide our users \nwith utmost trust, transparency, accountability and safety.\n    </Card.Text>\n      </Card.Body>\n    </Card>\n</div> \n\n  \n   \n   \n\n\n    \n    </>\n    )\n  }\n}\n\n\n \n\nexport default about;","import React, { Component } from 'react'\r\nimport {Form, Button, Card,Spinner} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n class login extends Component {\r\n\r\n    constructor() {\r\n      \r\n        super();\r\n        this.state = {\r\n        \r\n          email: '',\r\n          pass: '',\r\n          errorMessage : \"\",\r\n          user: {},\r\n          redirect:'/userHome',\r\n          loading: true\r\n        }\r\n    \r\n      }\r\n\r\ncomponentDidMount () {\r\n  if(!sessionStorage.getItem('status')) {}\r\n        \r\n        else {\r\n         this.props.history.push(\"/userHome\");\r\n        }\r\n}\r\n      inputSet = (e) => {\r\n        console.log(this.state.pass);\r\n        this.setState({[e.target.name] : e.target.value})\r\n    } \r\n\r\n    validateUser = (e) => {\r\n      e.preventDefault();\r\n      var dat = {\r\n\r\n           pass :this.state.pass,\r\n          email :this.state.email,\r\n          \r\n      }\r\n      if ( dat.email==='' ||\r\n      dat.pass === '' ) {\r\n        alert('Fill all Fields. Please...!')\r\n      }\r\n      else { \r\n        this.setState({loading: false});\r\n        axios.post(\"https://carpoolptbo.herokuapp.com/login/\",dat)\r\n    //  else { axios.post(\"http://localhost:8080/login\",dat)\r\n      .then(response=> {\r\n        if(response.data.length !== 0) {\r\n          this.setState({loading: true});\r\n          sessionStorage.setItem(\"status\", true );\r\n          sessionStorage.setItem('user',JSON.stringify(response.data))\r\n          this.props.history.push(\"/userHome\");\r\n          \r\n        }\r\n        else  if(response.data.length === 0) {\r\n          alert('Invalid Email or Password')\r\n          this.setState({loading: true});\r\n        }\r\n         else {\r\n            this.setState({errorMessage : \"Invalid Email or Password. Try again Later\"});\r\n         }\r\n        \r\n          })\r\n        }\r\n\r\n  }      \r\n    render() {\r\n        return (\r\n            <div style={{  display: `flex`, justifyContent: `center`  }}> \r\n    <Card  style={{ width: '30rem'  }}>\r\n    <Card.Body>\r\n    \r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\" >Login into your Account</Card.Subtitle>\r\n      <Card.Text>\r\n      <Form>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n      <Form.Label>Email address</Form.Label>\r\n      <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" required onChange={this.inputSet} />\r\n      <Form.Text className=\"text-muted\">\r\n        We'll never share your email with anyone else.\r\n      </Form.Text>\r\n    </Form.Group>\r\n  \r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"password\" name=\"pass\" placeholder=\"Password\"  required onChange={this.inputSet}/>\r\n    </Form.Group>\r\n    { this.state.errorMessage &&\r\n  <p style={{ color: 'red' }} className=\"error\"> { this.state.errorMessage } </p> }\r\n    <Button variant=\"primary\" type=\"submit\" onClick={this.validateUser}>\r\n      Submit\r\n    </Button>\r\n    {this.state.loading ? <div></div> : <>  <div><br></br> <Spinner animation=\"border\"  /> Please Wait......!   </div></>}\r\n      \r\n  </Form>\r\n\r\n  </Card.Text>\r\n      <Card.Link href=\"/register\">Need New Account?</Card.Link>\r\n      <Card.Link href=\"/resetPass\">Forgot Password?</Card.Link>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  </div>\r\n        )\r\n    }\r\n}\r\nexport default login;","import React, { Component } from 'react'\nimport {Form,Alert, Button, Card, Spinner} from \"react-bootstrap\";\nimport axios from 'axios';\nclass register extends Component {\n  constructor() {\n\n    super();\n    this.state = {\n      fname: '',\n      lname: '',\n      email: '',\n      pass: '',\n      cpass: '',\n      mobile : \"\",\n      loading: true\n    }\n\n  }\n\n  inputSet = (e) => {\n    this.setState({[e.target.name] : e.target.value})\n} \nsaveUser = (e) => {\n    e.preventDefault();\n   \n    var dat = {\n        lname :this.state.lname,\n        fname :this.state.fname,\n        email :this.state.email,\n        pass :this.state.pass,\n        mobile: this.state.mobile,\n        cpass: this.state.cpass,\n    }\n\n    if (dat.lname ==='' || dat.fname==='' || dat.email==='' ||\n    dat.pass === '' || dat.mobile==='' ) {\n      alert('Fill all Fields. Please...!')\n    } else if(dat.pass !== dat.cpass) {\n      alert('Password & Confirm Password are not Matching. Try again');\n    }\n    \n    else\n    \n    {\n      this.setState({loading: false});\n      axios.post(\"https://carpoolptbo.herokuapp.com/registration/\",dat)\n      // axios.post(\"http://localhost:8080/registration/\",dat)\n      .then(response=> {\n        // this.setState({messege : response.status});\n        if(response.data.length !== 0) {\n          this.setState({loading: true});\n          alert('User Registration Successfully Completed');\n          this.props.history.push(\"/login\");\n          \n        }\n         else if(response.data.length === 0) {\n            alert('Email Address Already Exist......!');\n            this.setState({loading: true});\n         }else \n            alert('Server Not Responding')\n      })\n    }\n\n   \n        \n    \n} \n\n\n  render() {\n    \n \n    return (\n   \n      <div style={{  display: `flex`, justifyContent: `center` }}>\n      <Card  border=\"primary\" style={{ width: '30rem' }}>\n      <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >CarPool PTBO\n      </Card.Header>\n      <Card.Body >\n      {/* <Card.Img variant=\"top\" src={logo} /> */}\n        {/* <Card.Title>Login into your Account</Card.Title> */}\n        <Card.Subtitle  className=\"mb-2 text-muted text-center\">Enter Your Details</Card.Subtitle>\n        <Card.Text>\n          \n       <Form>\n       <Form.Text style={{ color: 'red',}}className=\"\">\n         All Fields Mandatory *\n        </Form.Text>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label >Email address</Form.Label>\n        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.inputSet}/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n    \n      <Form.Group controlId=\"formBasicFname\">\n        <Form.Label>First Name</Form.Label>\n        <Form.Control type=\"text\" name=\"fname\"  placeholder=\"Enter First Name\" onChange={this.inputSet} />\n      </Form.Group>\n  \n     \n  \n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Last Name</Form.Label>\n        <Form.Control type=\"text\" name=\"lname\"  placeholder=\"Enter Last Name\"  onChange={this.inputSet}/>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicLname\">\n        <Form.Label>Mobile</Form.Label>\n        <Form.Control type=\"number\" name=\"mobile\"  placeholder=\"Mobile\"  onChange={this.inputSet}/>\n      </Form.Group>\n  \n  \n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" name=\"pass\"  placeholder=\"Password\" onChange={this.inputSet} />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\" name=\"cpass\"  placeholder=\"Confirm Password\" onChange={this.inputSet} />\n      </Form.Group>\n  \n      {/* <Form.Group controlId=\"formBasicConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\"name=\"cpass\" placeholder=\"Confirm Password\"onChange={this.inputSet}  />\n      </Form.Group> */}\n  \n  \n    \n      <Button variant=\"primary\" type=\"submit\" onClick={this.saveUser} >\n        Sign Up\n      </Button>\n      {this.state.loading ? <div></div> : <>  <div><br></br> <Spinner animation=\"border\"  /> Please Wait......!   </div></>}\n      \n    </Form>\n  \n        </Card.Text>\n        <Card.Link href=\"/login\">Already Registered?</Card.Link>\n        <Form.Text className=\"text-muted\">\n          I Accepted Terms & Condition. \n        </Form.Text>\n      </Card.Body>\n    </Card>\n    </div>\n\n    )\n  }\n}\nexport default register;","\r\nimport React, { Component } from 'react'\r\nimport { CardGroup,Form, Button, Card, Table} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport {Scrollbars} from 'react-custom-scrollbars';\r\n  class userHome extends Component {\r\n       \r\n        constructor () {\r\n            \r\n            super();\r\n            this.state = {\r\n                        uid:'',\r\n                        user : [],\r\n                        id:'',\r\n                        posts :[],\r\n                        fname: '',\r\n                        email:'',\r\n                        lname:'',\r\n                        pass:'',\r\n                        mobile:'',\r\n                        loading: true,\r\n                        key:''\r\n            }\r\n           \r\n            if(sessionStorage.getItem('status')) {\r\n                this.state.user = JSON.parse(sessionStorage.getItem('user'));\r\n            // console.log(this.user.id);\r\n            // this.setState({fname: this.state.user.fname});\r\n            this.id = this.state.user.id;\r\n            this.fname = this.state.user.fname;\r\n            this.lname = this.state.user.lname;\r\n            this.email = this.state.user.email;\r\n            this.pass = this.state.user.pass;\r\n            this.mobile = this.state.user.mobile;\r\n            \r\n            }\r\n            else {\r\n            }\r\n           \r\n        }\r\n        inputSet = (e) => {\r\n            this.setState({[e.target.name] : e.target.value})\r\n        } \r\n         componentDidMount() {\r\n           \r\n            \r\n\r\n            if(!sessionStorage.getItem('status')===true) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n            else {\r\n              axios.get('https://carpoolptbo.herokuapp.com/getPost/'+this.id+'/').then(response =>{\r\n                // axios.get('http://localhost:8080/getPost/'+this.id+'/').then(response =>{\r\n                     this.setState({posts : response.data})\r\n                   \r\n                }).catch(error => {\r\n                    console.log(error);\r\n                })\r\n            }\r\n              \r\n                \r\n        }\r\n\r\n\r\n        logout= (e)=>{\r\n            sessionStorage.removeItem('status');\r\n            sessionStorage.removeItem('user');\r\n            this.props.history.push(\"/login\");\r\n          }\r\n\r\n\r\n          delete= (e)=>{\r\n            this.setState({[e.target.name] : e.target.value})\r\n            \r\n            axios.post('https://carpoolptbo.herokuapp.com/delete/'+e.target.value+'/',).then(response =>{\r\n            // axios.post('http://localhost:8080/delete/'+e.target.value+'/',).then(response =>{\r\n             if(response.data === \"Post Deleted\") {\r\n              alert('Ride Deleted')\r\n              window.location.reload(false);\r\n             }else {\r\n              alert('Something Went Wrong')\r\n             }\r\n            \r\n         }).catch(error => {\r\n             console.log(error);\r\n         })\r\n           \r\n          }\r\n\r\n          update = (e) => {\r\n            e.preventDefault();\r\n            var dat = {\r\n                fname : this.state.user.fname,\r\n                lname : this.state.user.lname,\r\n                email : this.state.user.email,\r\n                id : this.state.user.id,\r\n                // lname :this.state.lname,\r\n                // fname :this.state.fname,\r\n                // email :this.state.email,\r\n                pass :this.state.pass,\r\n                mobile: this.state.mobile\r\n            \r\n            }\r\n            \r\n            // axios.post(\"http://localhost:8080/update/\",dat)\r\n            axios.post(\"https://carpoolptbo.herokuapp.com/update/\",dat)\r\n    .then(response=> {\r\n      // this.setState({messege : response.status});\r\n      if(response.status === 200) {\r\n        alert('Profile Updated')\r\n        // this.props.history.push(\"/Home\");\r\n        \r\n      }\r\n       else\r\n          alert('Sorrrrrry !!!! Un-authenticated User !!!!!')\r\n    })\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div class=\"\">\r\n                <CardGroup>\r\n                \r\n                    <div class=\"\">\r\n                    <Button variant=\"error\" type=\"submit\" onClick={this.logout} >\r\n                                        Logout\r\n                            </Button>\r\n                            <Card  border=\"success\" style={{ width: '20rem'}}>\r\n                            <Card.Header   className=\"mb-2 text-muted text-center font-size: 15px\" >You Profile Details\r\n                            </Card.Header>\r\n                            <Card.Body >\r\n                            {/* <Card.Img variant=\"top\" src={logo} /> */}\r\n                            {/* <Card.Title>Login into your Account</Card.Title> */}\r\n                            <Card.Subtitle  className=\"mb-2 text-muted text-center\">Welcome Back: <p> {  this.state.fname }</p></Card.Subtitle>\r\n                            <Card.Text>\r\n                                \r\n                            <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control  type=\"email\" name=\"email\" value = {this.email}  placeholder={this.email}  disabled  />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                            </Form.Group>\r\n                        \r\n                            <Form.Group controlId=\"formBasicFname\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"fname\"  value = {this.name}  placeholder={this.fname}  disabled  />\r\n                            </Form.Group>\r\n                        \r\n                        \r\n                        \r\n                            <Form.Group controlId=\"formBasicLname\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"lname\" value = {this.lname} placeholder={this.lname}   disabled  />\r\n                            </Form.Group>\r\n                    \r\n                            <Form.Group controlId=\"formBasicLname\">\r\n                            <Form.Label>Mobile</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"mobile\"  placeholder={this.mobile} onChange={this.inputSet} />\r\n                            </Form.Group>\r\n                        \r\n                        \r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"pass\" required placeholder=\"Password\" onChange={this.inputSet} />\r\n                            </Form.Group>\r\n                        \r\n                            <Button variant=\"success\" type=\"submit\" onClick={this.update} >\r\n                            Update\r\n                            </Button>\r\n                            <Form.Text className=\"text-muted\">\r\n                                \r\n                            </Form.Text>\r\n                        </Form>\r\n                        \r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n             </div>\r\n            <div class=\"col\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <h4 style={{   width : '50rem'  }}>Your Ride History</h4>\r\n                    </div >\r\n                    \r\n                    <div class=\"col\">\r\n                    <Button variant=\"warning\" type=\"submit\" href=\"/career\" >\r\n                                        Create Ride\r\n                                        </Button>\r\n\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n              \r\n                <div class=\"row\">\r\n               \r\n                    {/* {this.state.posts.map(singlePost => ( */}\r\n                        \r\n\r\n            \r\n                  \r\n                  <Scrollbars style={{  height: '50rem' }}>\r\n                        <Table variant=\"flush\" striped bordered hover size=\"sm\">\r\n                          \r\n                        <thead>\r\n                          <tr>\r\n                            <th>Ref</th>\r\n                            <th>Date</th>\r\n                            <th>Starting Point\r\n                                 \r\n                            </th>\r\n                            <th>Destination</th>\r\n                            <th>Time</th>\r\n                            <th>Rate</th>\r\n                            <th>Action</th>\r\n                            \r\n\r\n\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                        {this.state.posts.sort((a, b) => a.date < b.date ? 1 : -1)\r\n                        \r\n                        .map((item,key) =>{\r\n                            return ( \r\n                          <tr>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.date}</td>\r\n                            <td>{item.startPlace}</td>\r\n                            <td>{item.endPlace}</td>\r\n                            <td>{item.time}</td>\r\n                            <td>${item.rate}</td>\r\n                            <td>\r\n                            <Button variant=\"danger\" type=\"submit\" value = {item.id} name=\"key\" onClick ={this.delete}    >\r\n                                        Delete\r\n                                        </Button> \r\n                            </td>\r\n                          </tr>\r\n                          )\r\n                            })}\r\n                        </tbody>\r\n                        \r\n                      </Table>\r\n                      </Scrollbars>\r\n                    </div>\r\n             </div>  \r\n            </CardGroup>\r\n        </div>\r\n          </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default userHome;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Form, Button, Spinner,Card} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\n class resetPass extends Component {\r\n\r\n    \r\n    constructor() {\r\n      \r\n        super();\r\n        this.state = {\r\n        \r\n          email: '',\r\n          pass: '',\r\n          cpass:'',\r\n          mobile:'',\r\n          loading: true\r\n        }\r\n    \r\n      }\r\n\r\n\r\n      inputSet = (e) => {\r\n        this.setState({[e.target.name] : e.target.value})\r\n    } \r\n  \r\n\r\n\r\n\r\n      resetPassword = (e) => {\r\n        e.preventDefault();\r\n        var dat = {\r\n  \r\n             pass :this.state.pass,\r\n            email :this.state.email,\r\n            cpass :this.state.cpass,\r\n            mobile :this.state.mobile\r\n            \r\n        }\r\n        if ( dat.email==='' ||\r\n        dat.pass === '' || dat.mobile === '' ) {\r\n          alert('Fill all Fields. Please...!')\r\n        }\r\n        else if(dat.pass !== dat.cpass) {\r\n          alert('Password & Confirm Password are not Matching. Try again');\r\n        } else {\r\n          \r\n          this.setState({loading: false});\r\n          axios.post(\"https://carpoolptbo.herokuapp.com/resetPass/\",dat)\r\n      //  else { axios.post(\"http://localhost:8080/resetPass\",dat)\r\n        .then(response=> {\r\n          if(response.data.length !== 0) {\r\n            this.setState({loading: true});\r\n            alert('Password successfully');\r\n            this.props.history.push(\"/login\");\r\n           \r\n          }\r\n          else  if(response.data.length === 0) {\r\n            this.setState({loading: true});\r\n            alert('Invalid Email or Password')\r\n          }\r\n           else {\r\n              this.setState({errorMessage : \"Invalid Email or Password. Try again Later\"});\r\n           }\r\n          \r\n            })\r\n          \r\n        }\r\n        }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n            <div>\r\n\r\n            <div style={{  display: `flex`, justifyContent: `center`  }}> \r\n    <Card  style={{ width: '30rem'  }}>\r\n    <Card.Body>\r\n    \r\n      <Card.Subtitle className=\"mb-2 text-muted text-center\" >Recovery  Password</Card.Subtitle>\r\n      <Card.Text>\r\n      <Form>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n      <Form.Label>Email address</Form.Label>\r\n      <Form.Control type=\"email\" name=\"email\" formNoValidate placeholder=\"Enter email\" required onChange={this.inputSet} />\r\n    \r\n    </Form.Group>\r\n  \r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Phone Number</Form.Label>\r\n      <Form.Control type=\"number\" name=\"mobile\" placeholder=\"Phone Number\"  required onChange={this.inputSet}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>New Password</Form.Label>\r\n      <Form.Control type=\"password\" name=\"pass\" placeholder=\"New Password\"  required onChange={this.inputSet}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Confirm Password</Form.Label>\r\n      <Form.Control type=\"password\" name=\"cpass\" placeholder=\"Confirm Password\"  required onChange={this.inputSet}/>\r\n    </Form.Group>\r\n    <Button variant=\"primary\" type=\"submit\" onClick={this.resetPassword}>\r\n      Reset\r\n    </Button>\r\n\r\n    {this.state.loading ? <div></div> : <>  <div><br></br> <Spinner animation=\"border\"  /> Please Wait......!   </div></>}\r\n\r\n  </Form>\r\n\r\n  </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n\r\n  </div>\r\n\r\n\r\n                \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default resetPass;","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/home';\nimport Career from './pages/career';\nimport About from './pages/about';\n// import Career from './pages/services';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport UserHome from './pages/userHome';\nimport ResetPass from './pages/resetPass'\n// import axios from 'axios';\n\n class App extends Component {\n  constructor() {\n    super();\n\n    this.state ={\n      loggedInStatus : \"NOT_LOGGED_IN\",\n      user: {}\n    }\n\n\n\n  }\n\n\n  render() {\n      return (\n          <>\n         <Router>\n   <NavBar />\n     <Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/home' exact component={Home} />\n       <Route path='/career' component={Career} />\n       <Route path='/login' component={Login} />\n       <Route path='/register' component={Register} />\n       <Route path='/userHome' component ={UserHome}/>\n       <Route path='/resetPass' component ={ResetPass}/>\n       <Route path='/about' component ={About}/>\n       {/* <Link to=\"/userHome\">Login</Link> */}\n     \n    </Switch>\n    \n </Router>\n        </>\n      )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}